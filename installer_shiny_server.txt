Installation de R shiny server : 

sudo apt-get install r-base
sudo su - \
-c "R -e \"install.packages('shiny', repos='https://cran.rstudio.com/')\""

sudo apt-get install gdebi-core
wget https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.9.923-amd64.deb
sudo gdebi shiny-server-1.5.9.923-amd64.deb

ajouter cette ligne là dans ./~.Rprofile (ou /etc/R/Rprofile.site) pour l'utilisateur qui souhaitent faire tourné la machine virtuelle : 

options(download.file.method = "libcurl")


sur le server, il y a un fichier qui est /etc/shiny-server/shiny-server.conf, que le service shiny-server lit avant de mettre en place le server ce fichier est le suivant : 

# Instruct Shiny Server to run applications as the user "arpere"
run_as arpere;

# Define a server that listens on port 3838
server {
  listen 3838;

  # Define a location at the base URL
  location /<name> {

    # Host the directory of Shiny Apps stored in this directory
    site_dir /data/RNA-seq_project/pipeline/RNASeqDE/inst/;

    # Log all Shiny output to files in this directory
    log_dir /data/RNA-seq_project/;

    # When a user visits the base URL rather than a particular application,
    # an index of the applications available in this directory will be shown.
    directory_index off;
  }
}

Sur un autre ordinateur, le site est le suivant :
http://<nom-server>:3838/<name>
ici il va lire les instructions : 

Pour goole analytics, il y a un moyen d'arriver à mettre sur toute les pages, il faut mettre ce code la a l'interrieur de location comme cela :
location / {
  google_analytics_id UA-12345-1;
}
En remplacant l'id.